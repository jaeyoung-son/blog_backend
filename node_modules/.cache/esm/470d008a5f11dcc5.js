let Dotenv,Koa,Router,bodyParser,mongoose,api;_5f1‍.w("dotenv",[["default",["Dotenv"],function(v){Dotenv=v}]]);_5f1‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_5f1‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_5f1‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_5f1‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_5f1‍.w("./api",[["default",["api"],function(v){api=v}]]);
Dotenv.config();






_5f1‍.g.console.log(api, '에이피아이');

const { PORT, MONGO_URI } = process.env;

const app = new Koa();
const router = new Router();

mongoose
  .connect(MONGO_URI, { useNewUrlParser: true, useFindAndModify: false })
  .then(() => {
    console.log('Connecnted to MongoDB');
  })
  .catch(e => {
    _5f1‍.g.console.error(e);
  });

//라우터 설정
router.use('/api', api.routes()); //api 라우트 적용

// *라우터 적용 전* bodyParser 적용
app.use(bodyParser());

// app 인스턴서에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
  console.log(`Listening to port ${port}`);
});
